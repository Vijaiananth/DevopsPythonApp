# Python CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@1.3

jobs:
  lint:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint

  Docker-image-build-and-push:
    machine: true
    steps:
      - checkout
      - run:
          name: Docker Image - Build
          command: |
            docker build --tag=capstone .
      - run:
          name: Docker Image - List
          command: |
            docker image ls
      - run:
          name: Authenticate Docker and Push Docker image into Docker Hub
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            echo 'Logged into docker account'
            TAG=capstone
            dockerpath=vijaiananths/capstone
            docker tag $TAG $dockerpath
            docker push $dockerpath
            echo 'Pushed image to Hub'

  # Reference from https://circleci.com/developer/orbs/orb/circleci/aws-eks#usage-create-k8s-deployment
  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: Infra/infra.yml
          resource-name: deployment/capstone

workflows:
  default:
    jobs:
       - lint
       - Docker-image-build-and-push:
            requires: 
              - lint
       - aws-eks/create-cluster:
            cluster-name: capstone
       - create-deployment:
            cluster-name: capstone
            requires:
              - aws-eks/create-cluster